task 2

gcloud container clusters create --machine-type=e2-medium --zone=us-east1-b lab-cluster

kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:2.0 

kubectl expose deployment hello-app --type=LoadBalancer --port 8081

gcloud container clusters delete lab-cluster 



task 3

gcloud compute instance-templates create nginx-template \
   --region=us-east1 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=f1-micro \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script="#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html"

gcloud compute target-pools create nginx-pool

gcloud compute instance-groups managed create nginx-group \
	--base-instance-name nginx \
	--size 2 \
	--template nginx-template \
	--target-pool nginx-pool

gcloud compute firewall-rules create permit-tcp-rule-970 --allow tcp:80

gcloud compute forwarding-rules create nginx-lb \
	--region us-east1 \
	--ports=80 \
	--target-pool nginx-pool

gcloud compute http-health-checks create http-basic-check

gcloud compute instance-groups managed \
	set-named-ports nginx-group \
	--named-ports http:80

gcloud compute backend-services create nginx-backend \
	--protocol HTTP \
	--http-health-checks http-basic-check \
	--global

gcloud compute backend-services add-backend nginx-backend \
	--instance-group nginx-group \
	--instance-group-zone us-east1-b \
	--global

gcloud compute url-maps create web-map \
	--default-service nginx-backend

gcloud compute target-http-proxies create http-lb-proxy \
	--url-map web-map

gcloud compute forwarding-rules create http-content-rule \
	--global \
	--target-http-proxy http-lb-proxy \
	--ports 80

gcloud compute forwarding-rules list


  